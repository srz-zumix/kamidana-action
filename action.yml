name: 'kamidana-action'
description: 'jinja2 cli wrapper kamidana action.'
author: 'srz_zumix'
inputs:
  template:
    description: 'Jinja2 template file'
    required: true
  output_file:
    description: 'Output file path'
    required: false
  variables:
    description: 'Input data'
    required: false
  input_format:
    description: 'To be used with the "variables" input, can be one of: yaml,json,toml,csv,tsv,raw,env,md,markdown,spreadsheet'
    default: yaml
    required: false
  data_files:
    description: 'Input data files, supported format: yaml,json,toml'
    required: false
  requirements:
    description: 'Additionals modules requirements.txt string'
    require: false
  extensions:
    description: 'extension list, i18n,do,loopcontrols,with_,autoescape,debug'
    required: false
  additonals:
    description: 'Additionals modules'
    required: false
  tee:
    description: 'tee kamidana output'
    default: false
    required: false
  dump_context:
    description: 'dumping loading data'
    default: false
    required: false
  working-directory:
    description: 'working directory'
    default: ${{ github.workspace }}
    required: false
  python-version:
    description: 'setup-python python-version. if empty, skip setup-python.'
    default: '3.13'
    required: false
  github_token:
    description: 'github token for github filter'
    default: ${{ github.token }}
    required: false
  debug:
    description: 'enable kamidana debug'
    default: false
    required: false

outputs:
  text:
    description: "kamidana output text"
    value: ${{ steps.kamidana.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        # cache: 'pip'
        # cache-dependency-path: ${{ github.action_path  }}/requirements.txt
      if: inputs.python-version != ''
    - name: pip install
      env:
        INPUTS_REQUIREMENTS: ${{ inputs.requirements }}
      shell: bash
      run: |
        pip install --upgrade -r ${GITHUB_ACTION_PATH}/requirements.txt
        if [ -n "${INPUTS_REQUIREMENTS}" ]; then
          echo "${INPUTS_REQUIREMENTS}" > "${RUNNER_TEMP}/requirements.txt"
          pip install --upgrade -r "${RUNNER_TEMP}/requirements.txt"
        fi
    - name: kamidana
      shell: bash
      id: kamidana
      env:
        INPUTS_TEMPLATE: ${{ inputs.template }}
        INPUTS_OUTPUT_FILE: ${{ inputs.output_file }}
        INPUTS_VARIABLES: ${{ inputs.variables }}
        INPUTS_INPUT_FORMAT: ${{ inputs.input_format }}
        INPUTS_DATA_FILES: ${{ inputs.data_files }}
        INPUTS_EXTENSIONS: ${{ inputs.extensions }}
        INPUTS_ADDITONALS: ${{ inputs.additonals }}
        INPUTS_TEE: ${{ inputs.tee }}
        INPUTS_DUMP_CONTEXT: ${{ inputs.dump_context }}
        INPUTS_DEBUG: ${{ inputs.debug }}
        GITHUB_CONTEXT: ${{ toJson(github) }}
        INPUTS_CONTEXT: ${{ toJson(github.event.inputs) }}
        JOB_CONTEXT: ${{ toJson(job) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
        INPUTS_GITHUB_TOKEN: ${{ inputs.github_token }}
      run: "${GITHUB_ACTION_PATH}/entorypoint.sh"
      working-directory: ${{ inputs.working-directory }}

branding:
  icon: 'sliders'
  color: 'yellow'
